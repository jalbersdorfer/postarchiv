#
# Minimal Sphinx configuration sample (clean, simple, functional)
#
# Sphinx 2.3.2-id64-beta (4409612)
# Copyright (c) 2001-2016, Andrew Aksyonoff
# Copyright (c) 2008-2016, Sphinx Technologies Inc (http://sphinxsearch.com)
#

index testrt
{
	type			= rt
	rt_mem_limit		= 128M

	path			= /var/data/testrt

	rt_field		= content
	rt_attr_uint		= gid
	rt_attr_string		= title

        # expand_keywords
        #
        # Expand keywords with exact forms and/or stars when possible. Optional, default is 0 
        #
        # http://sphinxsearch.com/docs/current/conf-expand-keywords.html
	expand_keywords         = 1

        # morphology
        #
        # Morphology preprocessors can be applied to the words being indexed to replace different forms of the same word 
        # with the base, normalized form. For instance, English stemmer will normalize both "dogs" and "dog" to "dog", 
        # making search results for both searches the same
        #
        # http://sphinxsearch.com/docs/current/conf-morphology.html
        # lemmatize_de_all - apply German lemmatizer and index all possible root forms (added in 2.2.1-beta);
        # todo: morphology              = lemmatize_de_all

        # wordforms
        #
        # Word forms are applied after tokenizing the incoming text by charset_table rules. They essentially let you 
        # replace one word with another. Normally, that would be used to bring different word forms 
        # to a single normal form (eg. to normalize all the variants such as "walks", "walked", "walking" 
        # to the normal form "walk"). 
        # It can also be used to implement stemming exceptions, because stemming is not applied to words found in the forms list.
        #
        # http://sphinxsearch.com/docs/current/conf-wordforms.html
        # wordforms = /usr/local/sphinx/private/dict*.txt
}

#
# ELDOAR (Electronic Document Archive) / ELDARS (Electronic Document ARchive and Search) Index
#
#index eldoar
#{
#	type			= rt
#	rt_mem_limit		= 128M
#	path			= /var/data/eldoar
#
#	rt_field		= content
#	rt_attr_string		= title
#	rt_field		= title
#	rt_attr_string		= path
#	rt_attr_string		= tags
#	rt_field		= tags
#}

indexer
{
	mem_limit		= 128M
}


searchd
{
	listen			= 9312
	listen			= 9306:mysql41
	log			= /var/log/searchd.log
	query_log		= /var/log/query.log
	read_timeout		= 5
	max_children		= 30
	pid_file		= /var/log/searchd.pid
	seamless_rotate		= 1
	preopen_indexes		= 1
	unlink_old		= 1
	workers			= threads # for RT to work
	binlog_path		= /var/data
        mysql_version_string    = 5.7.0
}

